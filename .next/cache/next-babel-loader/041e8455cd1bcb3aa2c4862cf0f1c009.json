{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport useSWR from \"swr\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SetToken } from \"../../redux/actions/SetToken\";\nexport default function SignupFetch(_x) {\n  return _SignupFetch.apply(this, arguments);\n}\n\nfunction _SignupFetch() {\n  _SignupFetch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(user) {\n    var options, url, response, tokenId, userId, status, json;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            //   const user = useSelector((state) => state.user);\n            //   const dispatch = useDispatch();\n            //   console.log(user);\n            options = {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                email: user.email,\n                phone: user.phone,\n                name: user.username,\n                password: user.password,\n                imei: \"\"\n              })\n            };\n            url = \"https://api.partobanoo.com/user/signUp/fa\";\n            _context.prev = 2;\n            _context.next = 5;\n            return fetch(url, options);\n\n          case 5:\n            response = _context.sent;\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](2);\n            return _context.abrupt(\"return\", {\n              status: 500\n            });\n\n          case 11:\n            status = response.status;\n\n            if (!(status === 200)) {\n              _context.next = 18;\n              break;\n            }\n\n            tokenId = response.headers.get(\"x-auth-token\");\n            _context.next = 16;\n            return response.json();\n\n          case 16:\n            json = _context.sent;\n            userId = json.data.id; // console.log(\"up:\"+userId)\n\n          case 18:\n            return _context.abrupt(\"return\", {\n              status: status,\n              tokenId: tokenId,\n              userId: userId\n            });\n\n          case 19:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 8]]);\n  }));\n  return _SignupFetch.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}