{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nexport default function InterviewCheck(_x, _x2) {\n  return _InterviewCheck.apply(this, arguments);\n}\n_c2 = InterviewCheck;\n\nfunction _InterviewCheck() {\n  _InterviewCheck = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userId, tokenId) {\n    var options, url, response, status, interviewFlag, json;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            options = {\n              method: \"Get\",\n              headers: {\n                \"x-auth-token\": tokenId\n              }\n            };\n            console.log(\"check \" + userId + \" \" + tokenId);\n            url = \"https://api.partobanoo.com/profile/\" + userId + \"/fa\";\n            _context.prev = 3;\n            _context.next = 6;\n            return fetch(url, options);\n\n          case 6:\n            response = _context.sent;\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](3);\n            return _context.abrupt(\"return\", {\n              status: 500\n            });\n\n          case 12:\n            status = response.status;\n            interviewFlag = false;\n\n            if (!(status === 200)) {\n              _context.next = 21;\n              break;\n            }\n\n            _context.next = 17;\n            return response.json();\n\n          case 17:\n            json = _context.sent;\n            console.log(json.data);\n            if (json.data.birthdate === \"\") interviewFlag = false;\n            interviewFlag = true;\n\n          case 21:\n            return _context.abrupt(\"return\", {\n              status: status,\n              interviewFlag: interviewFlag\n            });\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 9]]);\n  }));\n  return _InterviewCheck.apply(this, arguments);\n}\n\n_c = InterviewCheck;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InterviewCheck\");\n$RefreshReg$(_c2, \"InterviewCheck\");","map":{"version":3,"sources":["E:/Parto/Main/partoPwa/parto-pwa/component/backend/InterviewCheck.js"],"names":["InterviewCheck","userId","tokenId","options","method","headers","console","log","url","fetch","response","status","interviewFlag","json","data","birthdate"],"mappings":";;AAAA,wBAA8BA,cAA9B;AAAA;AAAA;MAA8BA,c;;;6EAAf,iBAA8BC,MAA9B,EAAsCC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,OADO,GACG;AACdC,cAAAA,MAAM,EAAE,KADM;AAEdC,cAAAA,OAAO,EAAE;AACP,gCAAgBH;AADT;AAFK,aADH;AAObI,YAAAA,OAAO,CAACC,GAAR,CAAY,WAASN,MAAT,GAAkB,GAAlB,GAAuBC,OAAnC;AACMM,YAAAA,GARO,GAQD,wCAAwCP,MAAxC,GAAiD,KARhD;AAAA;AAAA;AAAA,mBAWMQ,KAAK,CAACD,GAAD,EAAML,OAAN,CAXX;;AAAA;AAWXO,YAAAA,QAXW;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,6CAaJ;AAAEC,cAAAA,MAAM,EAAE;AAAV,aAbI;;AAAA;AAgBTA,YAAAA,MAhBS,GAgBAD,QAAQ,CAACC,MAhBT;AAiBTC,YAAAA,aAjBS,GAiBM,KAjBN;;AAAA,kBAkBTD,MAAM,KAAK,GAlBF;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAmBMD,QAAQ,CAACG,IAAT,EAnBN;;AAAA;AAmBPA,YAAAA,IAnBO;AAoBXP,YAAAA,OAAO,CAACC,GAAR,CAAYM,IAAI,CAACC,IAAjB;AACA,gBAAID,IAAI,CAACC,IAAL,CAAUC,SAAV,KAAwB,EAA5B,EAAgCH,aAAa,GAAG,KAAhB;AAChCA,YAAAA,aAAa,GAAG,IAAhB;;AAtBW;AAAA,6CA2BN;AAAED,cAAAA,MAAM,EAAEA,MAAV;AAAkBC,cAAAA,aAAa,EAACA;AAAhC,aA3BM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;KAAeZ,c","sourcesContent":["export default async function InterviewCheck(userId, tokenId) {\r\n  const options = {\r\n    method: \"Get\",\r\n    headers: {\r\n      \"x-auth-token\": tokenId,\r\n    },\r\n  };\r\n  console.log(\"check \"+userId + \" \" +tokenId)\r\n  const url = \"https://api.partobanoo.com/profile/\" + userId + \"/fa\";\r\n  var response;\r\n  try {\r\n    response = await fetch(url, options);\r\n  } catch {\r\n    return { status: 500 };\r\n  }\r\n\r\n  var status = response.status;\r\n  var interviewFlag =false;\r\n  if (status === 200) {\r\n    var json = await response.json();\r\n    console.log(json.data)\r\n    if (json.data.birthdate === \"\") interviewFlag = false;\r\n    interviewFlag = true;\r\n    \r\n\r\n  }\r\n\r\n  return { status: status, interviewFlag:interviewFlag  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}